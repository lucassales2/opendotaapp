ext {
    ci = System.getenv("CI") == "true"
}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
kapt {
    correctErrorTypes = true
}

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.getkeepsafe.dexcount'


dexcount {
    // Only run the method counter on CI
    runOnEachPackage = ci
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "lucassales2.com.github.opendotaapp"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        // Don't pre-dex on CI
        preDexLibraries !ci
    }

    lintOptions {
        // Disable lintVital. Not needed since lint is run on CI
        checkReleaseBuilds false
    }

    dataBinding {
        enabled = true
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug

        }

        release {
//            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'

        }
    }
}

dependencies {
    implementation project(":data")
    implementation project(":opendota")
    implementation project(":base")

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "android.arch.lifecycle:extensions:${versions.arch}"
    implementation "android.arch.lifecycle:reactivestreams:${versions.arch}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    kapt "android.arch.lifecycle:compiler:${versions.arch}"

    implementation "android.arch.paging:runtime:${versions.arch_paging}"

    implementation "com.android.support:appcompat-v7:${versions.support_library}"
    implementation "com.android.support:design:${versions.support_library}"
    implementation "com.android.support:customtabs:${versions.support_library}"
    implementation "com.android.support:palette-v7:${versions.support_library}"

    implementation "com.android.support.constraint:constraint-layout:${versions.constraint_layout}"

    implementation "androidx.core:core-ktx:${versions.core_ktx}"

    kapt "com.android.databinding:compiler:${versions.android_gradle}"

    implementation 'com.gabrielittner.threetenbp:lazythreetenbp:0.2.0'

    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"

    implementation "com.airbnb.android:epoxy:${versions.epoxy}"
    //implementation "com.airbnb.android:epoxy-paging:${versions.epoxy}"
    implementation "com.airbnb.android:epoxy-databinding:${versions.epoxy}"
    kapt "com.airbnb.android:epoxy-processor:${versions.epoxy}"

    testImplementation 'junit:junit:4.12'

    androidTestImplementation("com.android.support.test.espresso:espresso-core:${versions.espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'com.android.support.test:runner:1.0.1'

    debugImplementation "nl.littlerobots.rxlint:rxlint:${versions.rxlint}"

    debugImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakcanary}"

    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }

    implementation "com.google.firebase:firebase-perf:${versions.firebase}"
}
